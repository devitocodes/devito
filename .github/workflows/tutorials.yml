name: Jupyter Notebooks

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tutorials:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      DEVITO_ARCH: "${{ matrix.compiler }}"
      DEVITO_LANGUAGE: ${{ matrix.language }}
      PYTHON_VERSION: "3.7"

    strategy:
      # Prevent all build to stop if a single one fails
      fail-fast: false
      matrix:
        name: [
          tutos-ubuntu-gcc-py37,
          tutos-osx-gcc-py37,
          tutos-osx-clang-py37,
          tutos-docker-gcc-py37,
          tutos-docker-icc-py37
          ]

        include:
          - name: tutos-ubuntu-gcc-py37
            os: ubuntu-16.04
            compiler: gcc
            language: "openmp"

          - name: tutos-osx-gcc-py37
            os: macos-latest
            compiler: gcc-9
            language: "openmp"

          - name: tutos-osx-clang-py37
            os: macos-latest
            compiler: clang
            language: "C"

          - name: tutos-docker-gcc-py37
            os: ubuntu-latest
            compiler: gcc
            language: "openmp"

          - name: tutos-docker-icc-py37
            os: ubuntu-latest
            compiler: icc
            language: "openmp"

    steps:
    - name: Checkout devito
      uses: actions/checkout@v1

    - name: Set up Python 3.7
      if: matrix.name != 'tutos-docker-gcc-py37'
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install compilers for OSX
      if: runner.os == 'macOS'
      run: |
        if [ "${{ matrix.compiler }}" = "gcc-9" ]; then
          brew install gcc@9
        else
          sudo xcode-select -s /Applications/Xcode_12.2.app/Contents/Developer
        fi

    - name: Build docker image
      if: matrix.name == 'tutos-docker-gcc-py37'
      run: |
          docker build . --file docker/Dockerfile --tag devito_img

    - name: Build docker image
      if: matrix.name == 'tutos-docker-icc-py37'
      run: |
          docker build . --file docker/Dockerfile.intel --tag devito_img

    - name: Set run prefix
      run: |
          if [ "${{ matrix.name }}" == 'tutos-docker-gcc-py37' ]; then
              echo "::set-output name=RUN_CMD::docker run --rm --name testrun devito_img"
          else
              echo "::set-output name=RUN_CMD::"
          fi
      id: set-run

    - name: Set run prefix
      run: |
          if [ "${{ matrix.name }}" == 'tutos-docker-icc-py37' ]; then
              echo "::set-output name=RUN_CMD::docker run --rm --name testrun devito_img"
          else
              echo "::set-output name=RUN_CMD::"
          fi
      id: set-intelrun

    - name: Install dependencies
      if: matrix.name != 'tutos-docker-gcc-py37'
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install matplotlib blosc

    - name: Seismic notebooks
      run: |
        ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval -k 'not dask' examples/seismic/tutorials/  # Horrible, but we're still at a loss
        ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval examples/seismic/acoustic/accuracy.ipynb

    - name: Dask notebooks
      if: runner.os != 'macOS'
      run: |
          ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval examples/seismic/tutorials/*dask*.ipynb

    - name: Self-adjoint notebooks
      run: |
        ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval examples/seismic/self_adjoint/

    - name: CFD notebooks
      run: |
        ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval examples/cfd

    - name: User api notebooks
      run: |
        ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval examples/userapi

    - name: Compiler notebooks
      run: |
        ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval examples/compiler

    - name: Finance notebooks
      run: |
        ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval examples/finance

    - name: Performance notebooks
      run: |
        ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval examples/performance

    - name: ABC Notebooks
      run: |
        ${{ steps.set-run.outputs.RUN_CMD }} py.test --nbval examples/seismic/abc_methods
