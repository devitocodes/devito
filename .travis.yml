sudo: false

language: python

env:
  global:
    # Doctr deploy key for opesci/devito
    - secure: "A6t8XTNLC7HS3Wip3Qnn93ZlHM8Y6JEQ1jFv9eLbQx+tGIvpCNXoM4QGaL2tphqHcVQDQGO6rVX9hjm8Cz2bRwOdCNTqbukChnd2tcCuF/2u+Ua0ev+/2o8/N1IaQxM62XI73PEgX+NTaYHpcTmFHfkfHnxpAlGpycW0aiNxzrGM400Wq6ap8zmq1SdFxWms7w1+li1P3zoGd7In+Gg8Kxd6Ty5qsy/qsl3rDQExT8Li8P0NWcthmTvMokUpb3ocLRfrpdobk9x3YTtwoRXaZFyp80nD2pVzjZSI3oiqHMNJF9lWbLVTInNvoK4nCR4gB8gYg34RcE50JoBsqFFN/qQMJtsEUc00/8Y9SLAsxMve0JtZnBBjmR+LWy89DHpAy8MlPhc40JVh53LSyzYglXlSkMwfDhWnollOQjyhC5ndV8tpuHW/9c+SqaG9SwVktAot+OGKogn1FT6bIxgMslRJpBhUROM9KO7qDssT+iC26wAUagsUtEpSFz4CqiYThyGcvnKFnlxAIOG/yWFF6GcfI/swsEixHjQdeMx7ICV2bWm+jAoS/ojjtDdPzgoxnsWnIChMvGCDCChNoAl3IlAJNKR5VsVr7bwr4eHSR9DBWJCZSfg1lyzU2nOQz4q8y/C0gfP1N0zv5kKWn8HKTr7FjLfofMWVCguwUS7hIVU="
    - DEVITO_LOGGING: "INFO"
matrix:
  include:
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env: INSTALL_TYPE='conda' TEST_FLAKE=1 TEST_DOCS=1 DEVITO_ARCH=gcc-7
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env: INSTALL_TYPE='pip_setup' DEVITO_OPENMP=1 OMP_NUM_THREADS=2 TEST_BUNDLE='basic_pip' DEVITO_ARCH=gcc-7
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - g++-4.9
      env: INSTALL_TYPE='conda' DEVITO_OPENMP=1 OMP_NUM_THREADS=2 TEST_BUNDLE='basic_conda' DEVITO_ARCH=gcc-4.9
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
      env: INSTALL_TYPE='conda' DEVITO_OPENMP=1 OMP_NUM_THREADS=2 TEST_BUNDLE='basic_conda' DEVITO_ARCH=gcc-5
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env: INSTALL_TYPE='conda' DEVITO_OPENMP=1 OMP_NUM_THREADS=2 TEST_BUNDLE='basic_conda' DEVITO_ARCH=gcc-7
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env: INSTALL_TYPE='conda' DEVITO_OPENMP=1 OMP_NUM_THREADS=2 TEST_BUNDLE='basic_conda' DEVITO_ARCH=gcc-7 DEVITO_BACKEND=yask YC_CXX=g++-7
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - g++-4.9
      env: INSTALL_TYPE='conda' DEVITO_OPENMP=0 TEST_BUNDLE='tutorials' DEVITO_ARCH=gcc-4.9
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
      env: INSTALL_TYPE='conda' DEVITO_OPENMP=0 TEST_BUNDLE='tutorials' DEVITO_ARCH=gcc-5
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env: INSTALL_TYPE='conda' DEVITO_OPENMP=0 TEST_BUNDLE='tutorials' DEVITO_ARCH=gcc-7
    - os: linux
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env: INSTALL_TYPE='conda' DEVITO_OPENMP=0 TEST_BUNDLE='tutorials' DEVITO_ARCH=gcc-7 DEVITO_BACKEND=yask YC_CXX=g++-7
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test

before_install:
  # Setup anaconda
  - if [[ ${INSTALL_TYPE} == 'conda' ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;
      conda info -a;
    fi

install:
  # Install devito with conda
  - if [[ ${INSTALL_TYPE} == 'conda' ]]; then
      conda env create -q -f environment.yml python=$TRAVIS_PYTHON_VERSION;
      source activate devito;
      pip install -e .;
      conda list;
    fi
  # Install devito with pip
  - if [[ ${INSTALL_TYPE} == 'pip_setup' ]]; then python setup.py install; fi

before_script:
  - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - if [[ ${DEVITO_BACKEND} == 'yask' ]]; then
      conda install swig; cd ../;
      git clone https://github.com/opesci/yask.git;
      cd yask; make compiler && make compiler-api; pip install -e .; cd ../devito;
    fi

script:
  - if [[ ${TEST_FLAKE} == 1 ]]; then flake8 --builtins=ArgumentError .; fi
  # Run tests
  - if [[ ${TEST_BUNDLE} == 'basic_pip' ]]; then python setup.py test; fi
  - if [[ ${TEST_BUNDLE} == 'basic_conda' ]]; then py.test --cov devito tests; fi
  # Run remaining specialized examples and tests
  # Additional seismic operator tests
  - if [[ ${TEST_BUNDLE} == 'tutorials' ]]; then
    python examples/seismic/benchmark.py test -P tti -so 4 -a -d 20 20 20 -n 5;
    python examples/seismic/benchmark.py test -P acoustic -a;
    python examples/seismic/acoustic/acoustic_example.py --full;
    python examples/seismic/acoustic/acoustic_example.py --constant --full;
    python examples/seismic/acoustic/gradient_example.py;
    python examples/misc/linalg.py mat-vec mat-mat-sum transpose-mat-vec;
    python examples/seismic/tti/tti_example.py -a;
    python examples/checkpointing/checkpointing_example.py;
    py.test --nbval examples/cfd;
    py.test --nbval examples/seismic/tutorials; fi
  # Code coverage and documentation generation
  - if [[ ${TEST_DOCS} == 1 ]]; then
      codecov;
      sphinx-apidoc -f -o docs/ examples;
      sphinx-apidoc -f -o docs/ devito devito/yask/*;
      cd docs;
      make html;
      cd ..;
    fi
  # Docs deployment only once from a single build
  - if [[ ${TEST_DOCS} == 1 ]]; then
          set -e;
          pip install doctr;
          doctr deploy . --built-docs docs --key-path .deploy_key.enc;
    fi
