from devito import Operator
from devito.ir.ietxdsl.xdsl_passes import transform_devito_xdsl_string
from devito.logger import perf

__all__ = ['XDSLOperator']


class XDSLOperator(Operator):

    def __new__(cls, expressions, **kwargs):
        return super(XDSLOperator, cls).__new__(cls, expressions, **kwargs)

    def _jit_compile(self):
        """
        JIT-compile the C code generated by the Operator.

        It is ensured that JIT compilation will only be performed once per
        Operator, reagardless of how many times this method is invoked.
        """
        ccode = transform_devito_xdsl_string(self)
        self.ccode = ccode
        if self._lib is None:
            with self._profiler.timer_on('jit-compile'):
                recompiled, src_file = self._compiler.jit_compile(self._soname,
                                                                  self.ccode)

            elapsed = self._profiler.py_timers['jit-compile']
            if recompiled:
                perf("XDSLOperator `%s` jit-compiled `%s` in %.2f s with `%s`" %
                     (self.name, src_file, elapsed, self._compiler))
            else:
                perf("XDSLOperator `%s` fetched `%s` in %.2f s from jit-cache" %
                     (self.name, src_file, elapsed))
