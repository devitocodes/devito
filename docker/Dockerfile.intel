# syntax=docker/dockerfile:1
##############################################################
# This Dockerfile contains the Intel OneAPI toolkit for Devito
##############################################################

ARG base=ubuntu:22.04

FROM ${base} as oneapi

SHELL ["/bin/bash", "-c"]

COPY requirements-mpi.txt /tmp/requirements-mpi.txt

# Install base dependencies
RUN if command -v apt-get >/dev/null; then \
        export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y \
            dh-autoreconf python3-venv python3-dev python3-pip \
            wget flex libnuma-dev hwloc curl cmake \
            autoconf libtool build-essential procps git gpg \
            libncurses5-dev libncursesw5-dev libdrm-dev libsystemd-dev \
            python3-dbg gdb numactl tmux vim libgl1-mesa-glx libfftw3-dev; \
    else \
        dnf update -y && \
        dnf install -y \
            python3 python3-devel python3-pip \
            wget flex numactl-devel hwloc hwloc-devel curl cmake \
            git autoconf libtool make which procps-ng gcc gcc-c++ gcc-gfortran \
            gpgme ncurses-devel libdrm-devel systemd-devel gdb numactl tmux vim mesa-libGL fftw-devel && \
        (dnf install -y python3-debug || true) && \
        dnf clean all && rm -rf /var/cache/dnf; \
    fi

# Configure Intel repositories and install toolkits
RUN if command -v apt-get >/dev/null; then \
        wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor > /usr/share/keyrings/oneapi-archive-keyring.gpg && \
        echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" > /etc/apt/sources.list.d/oneAPI.list && \
        wget -qO - https://repositories.intel.com/graphics/intel-graphics.key | gpg --dearmor > /usr/share/keyrings/intel-graphics.gpg && \
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/graphics/ubuntu jammy unified" > /etc/apt/sources.list.d/intel-gpu-jammy.list && \
        apt-get update -y && apt-get dist-upgrade -y && \
        apt-get install -y intel-oneapi-advisor && \
        apt-get install -y intel-oneapi-mpi-devel && \
        apt-get install -y intel-opencl-icd intel-level-zero-gpu level-zero \
            intel-media-va-driver-non-free libmfx1 libmfxgen1 libvpl2 \
            libegl-mesa0 libegl1-mesa libegl1-mesa-dev libgbm1 libgl1-mesa-dev libgl1-mesa-dri \
            libglapi-mesa libgles2-mesa-dev libglx-mesa0 libigdgmm12 libxatracker2 mesa-va-drivers \
            mesa-vdpau-drivers mesa-vulkan-drivers va-driver-all vainfo hwinfo clinfo \
            pciutils libkmod-dev intel-fw-gpu xpu-smi \
            libigc-dev intel-igc-cm libigdfcl-dev libigfxcmrt-dev level-zero-dev; \
    else \
        dnf install -y dnf-plugins-core && \
        dnf config-manager --add-repo https://yum.repos.intel.com/oneapi && \
        rpm --import https://yum.repos.intel.com/oneapi/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \
        dnf update -y && \
        dnf install -y intel-oneapi-advisor && \
        dnf install -y intel-oneapi-mpi-devel intel-oneapi-runtime-compilers intel-oneapi-runtime-dpcpp-cpp \
            intel-oneapi-runtime-opencl intel-oneapi-runtime-level-zero && \
        dnf clean all && rm -rf /var/cache/dnf; \
    fi

# Python virtual environment with mpi4py pre-installed
RUN python3 -m venv /venv && \
    /venv/bin/pip install --no-cache-dir --upgrade pip wheel setuptools && \
    source /opt/intel/oneapi/setvars.sh intel64 && \
    MPICC=mpiicc /venv/bin/pip install --no-cache-dir -r /tmp/requirements-mpi.txt

ENV MPI4PY_RC_RECV_MPROBE=0

# Cleanup package caches on apt-based systems
RUN if command -v apt-get >/dev/null; then \
        apt-get clean && apt-get autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*; \
    fi

EXPOSE 8888
CMD ["/bin/bash"]

##############################################################
# ICC image
# This is a legacy setup that is not built anymore but kept for reference
##############################################################
FROM oneapi AS icc

RUN if command -v apt-get >/dev/null; then \
        apt-get update -y && \
        apt-get install -y intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic intel-oneapi-mpi-devel && \
        apt-get clean && apt-get autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*; \
    else \
        dnf install -y intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic intel-oneapi-mpi-devel && \
        dnf clean all && rm -rf /var/cache/dnf; \
    fi

# Devito config
ENV I_MPI_CC="icc"
ENV I_MPI_CXX="icpc"
ENV DEVITO_ARCH="icc"
ENV DEVITO_LANGUAGE="openmp"
ENV DEVITO_PLATFORM="intel64"
# MPICC compiler for mpi4py
ENV MPICC=mpiicc

##############################################################
# ICX OpenMP image
##############################################################
FROM oneapi AS icx

RUN if command -v apt-get >/dev/null; then \
        apt-get update -y && \
        apt-get install -y intel-oneapi-compiler-dpcpp-cpp intel-oneapi-mpi-devel && \
        apt-get clean && apt-get autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*; \
    else \
        dnf install -y intel-oneapi-compiler-dpcpp-cpp intel-oneapi-mpi-devel && \
        dnf clean all && rm -rf /var/cache/dnf; \
    fi

# Devito config
ENV I_MPI_CC="icx"
ENV I_MPI_CXX="icpx"
ENV DEVITO_ARCH="icx"
ENV DEVITO_LANGUAGE="openmp"
# MPICC compiler for mpi4py
ENV MPICC=mpiicc

##############################################################
# ICX SYCL CPU image
##############################################################
FROM icx AS cpu-sycl

# Devito config
ENV DEVITO_ARCH="sycl"
ENV DEVITO_LANGUAGE="sycl"
ENV DEVITO_PLATFORM="intel64"

##############################################################
# ICX SYCL GPU image
##############################################################
FROM icx as gpu-sycl

# Devito config
ENV DEVITO_ARCH="sycl"
ENV DEVITO_LANGUAGE="sycl"
ENV DEVITO_PLATFORM="intelgpuX"
