##############################################################
# This Dockerfile contains NVIDIA HPC SDK (nvc, cuda, OpenMPI) and Devito
#
# BUILD: 
#   docker build --network=host --file docker/Dockerfile.nvidia --tag devito:nvidia .
#
# LEGACY:
#   (1) Option MPI 3.0:
#   docker build --network=host --build-arg MPI_VER=3 --file docker/Dockerfile.nvidia --tag devito:nvidia .
#
#   (2) Option MPI 4.0:
#   Enabling and using MPI 4.0.5 works on R450 drivers, but is showing compatibility 
#   issues during testing on older R418 drivers.
# 
#   docker build --network=host --build-arg MPI_VER=4 --file docker/Dockerfile.nvidia --tag devito:nvidia .
#
# RUN: 
#   docker run --gpus all --rm -it devito:nvidia
#
##############################################################
FROM python:3.8

ENV DEBIAN_FRONTEND noninteractive

## NVIDIA HPC SDK (CUDA + OpenMPI)
# nodesource: nvdashboard requires nodejs>=10  
RUN apt-get update -y && \
    apt-get install -y -q \
        apt-utils curl\   
        vim nano && \
    curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
    apt-get install -y -q \
        nodejs \
        liblapack-dev  \
        libblas-dev \
        libibverbs-dev libmlx4-1 libmlx5-1 ibutils \
        texlive-latex-extra texlive-fonts-recommended dvipng cm-super \
        ffmpeg && \
    wget -q -P /app/ \
         https://developer.download.nvidia.com/hpc-sdk/21.9/nvhpc-21-9_21.9_amd64.deb \
         https://developer.download.nvidia.com/hpc-sdk/21.9/nvhpc-21-9-cuda-multi_21.9_amd64.deb \
         https://developer.download.nvidia.com/hpc-sdk/21.9/nvhpc-2021_21.9_amd64.deb && \
    wget -q -P /app/nvcomp_exts/ \
         https://developer.download.nvidia.com/compute/nvcomp/2.0/local_installers/nvcomp_exts_x86_64_ubuntu18.04-2.0.tar.gz &&\
    apt-get install -y -q \
         /app/nvhpc-21-9_21.9_amd64.deb \
         /app/nvhpc-21-9-cuda-multi_21.9_amd64.deb \
         /app/nvhpc-2021_21.9_amd64.deb && \
    tar -xvf /app/nvcomp_exts/nvcomp_exts_x86_64_ubuntu18.04-2.0.tar.gz -C /app/nvcomp_exts && \
    apt-get update -y && \
    rm -rf /app/nvhpc* && \
    rm -rf /app/nvcomp_exts/nvcomp* && \
    rm -rf /var/lib/apt/lists/*

ARG HPCSDK_HOME=/opt/nvidia/hpc_sdk/Linux_x86_64/2021
ARG HPCSDK_CUPTI=/opt/nvidia/hpc_sdk/Linux_x86_64/2021/cuda/11.4/extras/CUPTI
#MPI_VER options 3,4,HPCX
ARG MPI_VER=HPCX 

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility

# required for nvidia-docker v1
RUN echo "$HPCSDK_HOME/cuda/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_HOME/cuda/lib64" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_HOME/compilers/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_HOME/comm_libs/mpi/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_CUPTI/lib64" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_HOME/math_libs/lib64" >> /etc/ld.so.conf.d/nvidia.conf    

# Compression
ENV NVCOMP_EXTS_ROOT /app/nvcomp_exts/ubuntu18.04/11.2
ENV bitcomp_DIR $NVCOMP_EXTS_ROOT/lib/
    
# Compiler, CUDA, and Library paths
ENV CUDA_HOME $HPCSDK_HOME/cuda
ENV CUDA_ROOT $HPCSDK_HOME/cuda/bin
ENV PATH $HPCSDK_HOME/compilers/bin:$HPCSDK_HOME/cuda/bin:$HPCSDK_HOME/comm_libs/mpi/bin:${PATH}
ENV LD_LIBRARY_PATH $HPCSDK_HOME/cuda/lib:$HPCSDK_HOME/cuda/lib64:$HPCSDK_HOME/compilers/lib:$HPCSDK_HOME/math_libs/lib64:$HPCSDK_HOME/comm_libs/mpi/lib:$HPCSDK_CUPTI/lib64:bitcomp_DIR:${LD_LIBRARY_PATH}

# MPI ROOT USER DEFAULTS
ENV OMPI_ALLOW_RUN_AS_ROOT=1
ENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
ENV OMPI_MCA_rmaps_base_oversubscribe=1
ENV OMPI_MCA_btl_base_warn_component_unused=0
ENV UCX_MEMTYPE_CACHE=no
ENV UCX_NET_DEVICES=all
ENV UCX_SHM_DEVICES=all
ENV UCX_ACC_DEVICES=all
ENV NCCL_UCX_RNDV_THRESH=0
ENV NCCL_UCX_RNDV_SCHEME=get_zcopy
ENV NCCL_PLUGIN_P2P=ucx
ENV UCX_TLS=rc_x,sm,shm,cuda_copy,gdr_copy,cuda_ipc
ENV MELLANOX_MOUNT_DRIVER=1

ENV CPATH $HPCSDK_HOME/comm_libs/mpi/include:${CPATH}
ENV CFLAGS=-noswitcherror

RUN if [ "x$MPI_VER" = "x4" ]; then \
        rm -f  $HPCSDK_HOME/comm_libs/mpi && \
        ln -sf $HPCSDK_HOME/comm_libs/openmpi4/openmpi-4.0.5 \
               $HPCSDK_HOME/comm_libs/mpi ; \
    fi;  \
    if [ "x$MPI_VER" = "HPCX" ]; then \
        rm -f  $HPCSDK_HOME/comm_libs/mpi && \
        ln -sf $HPCSDK_HOME/comm_libs/hpcx/latest/ompi \
               $HPCSDK_HOME/comm_libs/mpi ; \
    fi;
ENV CFLAGS=

## DEVITO
RUN git clone https://github.com/devitocodes/devito.git
WORKDIR /devito
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements-optional.txt && \
    pip install --no-cache-dir -r requirements-nvidia.txt && \
    OMPI_CC=gcc pip install --no-cache-dir -r requirements-mpi.txt && \
    rm -rf ~/.cache/pip
RUN pip install -e .

CMD ["/bin/bash"]
